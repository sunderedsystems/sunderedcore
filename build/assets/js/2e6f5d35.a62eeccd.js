"use strict";(self.webpackChunks_5_e_sunderedsystems_com=self.webpackChunks_5_e_sunderedsystems_com||[]).push([[87],{3076:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"counters","title":"Counters and Reactions","description":"A counter is an action taken in response to a successful attack or effect\u2014whether targeting yourself or an ally.","source":"@site/docs/counters.md","sourceDirName":".","slug":"/counters","permalink":"/docs/counters","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Core Rules: Magic and Techniques","permalink":"/docs/techniques"},"next":{"title":"Items and Magic","permalink":"/docs/items-and-types"}}');var r=s(4848),l=s(8453);const t={},c="Counters and Reactions",o={},d=[{value:"Absorption",id:"absorption",level:2},{value:"Block",id:"block",level:2},{value:"Block Steps",id:"block-steps",level:3},{value:"Dig In (Block or Parry)",id:"dig-in-block-or-parry",level:3},{value:"Parry",id:"parry",level:2},{value:"Parry Steps",id:"parry-steps",level:3},{value:"Counterspell",id:"counterspell",level:2},{value:"Countering Spell Damage",id:"countering-spell-damage",level:3},{value:"Countering Status Effects",id:"countering-status-effects",level:3},{value:"Critical Counters",id:"critical-counters",level:2},{value:"Reactions",id:"reactions",level:2},{value:"Counteraction",id:"counteraction",level:3},{value:"Counter Attack",id:"counter-attack",level:3},{value:"Cost (choose one):",id:"cost-choose-one",level:4},{value:"Dodge (Passive Defense)",id:"dodge-passive-defense",level:2},{value:"Targeting Dodge",id:"targeting-dodge",level:3},{value:"Ending Status Effects",id:"ending-status-effects",level:2}];function a(e){const n={blockquote:"blockquote",br:"br",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"counters-and-reactions",children:"Counters and Reactions"})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"counter"})," is an action taken in response to a successful attack or effect\u2014whether targeting yourself or an ally."]}),"\n",(0,r.jsx)(n.p,{children:"At the time of incoming spells or damage, targets must choose if they will counter, and how."}),"\n",(0,r.jsx)(n.p,{children:"Counters are resolved first by type, then initiative order."}),"\n",(0,r.jsx)(n.p,{children:"A counterspell resolves first, then block, then parry, then non-action."}),"\n",(0,r.jsx)(n.p,{children:"If multiple people choose to counterspell, the first in initiative order makes the first check."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Example: The party is targeted by a successful damaging area of effect spell."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"One player chooses to counterspell. Another Chooses to block with their magic shield. The third chooses to accept the hit."}),"\n",(0,r.jsx)(n.li,{children:"The counterspell fails."}),"\n",(0,r.jsx)(n.li,{children:"The blocker commits SD, then rolls to reduce the incoming damage."}),"\n",(0,r.jsx)(n.li,{children:"The third takes damage normally."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"absorption",children:"Absorption"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Base physical absorption = ",(0,r.jsx)(n.strong,{children:"Strength modifier"})]}),"\n",(0,r.jsxs)(n.li,{children:["If proficient in Strength: add ",(0,r.jsx)(n.strong,{children:"proficiency bonus"})]}),"\n",(0,r.jsxs)(n.li,{children:["Absorption is ",(0,r.jsx)(n.strong,{children:"passive"})]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Note: Common weapons, armor, and shields ",(0,r.jsx)(n.strong,{children:"cannot absorb magical damage"}),(0,r.jsx)(n.br,{}),"\n","Only ",(0,r.jsx)(n.strong,{children:"magical"})," equipment may absorb ",(0,r.jsx)(n.strong,{children:"magical"})," damage"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"block",children:"Block"}),"\n",(0,r.jsxs)(n.p,{children:["You may ",(0,r.jsx)(n.strong,{children:"block"})," incoming physical damage by:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Spending ",(0,r.jsx)(n.strong,{children:"1+ SD"})," (up to proficiency), or"]}),"\n",(0,r.jsxs)(n.li,{children:["Spending ",(0,r.jsx)(n.strong,{children:"10ft or more of unspent movement"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"block-steps",children:"Block Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Roll committed SD"}),"\n",(0,r.jsxs)(n.li,{children:["Add:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Strength modifier"}),"\n",(0,r.jsx)(n.li,{children:"Proficiency (if proficient)"}),"\n",(0,r.jsx)(n.li,{children:"Any Dig In bonus"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Subtract that total from the incoming damage"}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Magic damage"})," may only be blocked using ",(0,r.jsx)(n.strong,{children:"magical weapons or shields"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"dig-in-block-or-parry",children:"Dig In (Block or Parry)"}),"\n",(0,r.jsxs)(n.p,{children:["Spend ",(0,r.jsx)(n.strong,{children:"10ft movement = \u20131 damage"})," reduction"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Example:",(0,r.jsx)(n.br,{}),"\n","Incoming damage = 17",(0,r.jsx)(n.br,{}),"\n","You commit 3 SD (roll 10), Str mod +3, Prof +3, and Dig In (20ft = \u20132)",(0,r.jsx)(n.br,{}),"\n","Total absorbed = 10 + 3 + 3 + 2 = 18 \u2192 ",(0,r.jsx)(n.strong,{children:"no damage taken"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"parry",children:"Parry"}),"\n",(0,r.jsxs)(n.p,{children:["You may ",(0,r.jsx)(n.strong,{children:"Parry"})," melee attacks ",(0,r.jsx)(n.strong,{children:"if wielding a melee weapon"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Spend ",(0,r.jsx)(n.strong,{children:"1+ SD"})," (up to proficiency), or"]}),"\n",(0,r.jsx)(n.li,{children:"Spend unspent movement (10ft per \u20131 damage)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"parry-steps",children:"Parry Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Roll committed SD"}),"\n",(0,r.jsxs)(n.li,{children:["Add:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Agility modifier"}),"\n",(0,r.jsx)(n.li,{children:"Proficiency (if proficient)"}),"\n",(0,r.jsx)(n.li,{children:"Dig In bonus (if applied)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"You cannot parry"})," ranged or magical attacks"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Example:",(0,r.jsx)(n.br,{}),"\n","Incoming damage = 17",(0,r.jsx)(n.br,{}),"\n","You commit 3 SD (roll 10), Agi mod +3, ",(0,r.jsx)(n.strong,{children:"not proficient"}),", and Dig In (20ft = \u20132)",(0,r.jsx)(n.br,{}),"\n","Total absorbed = 10 + 3 + 0 + 2 = 15 \u2192 ",(0,r.jsx)(n.strong,{children:"2 damage taken"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"counterspell",children:"Counterspell"}),"\n",(0,r.jsxs)(n.p,{children:["You may ",(0,r.jsx)(n.strong,{children:"counter successful spells"})," by committing SD."]}),"\n",(0,r.jsx)(n.h3,{id:"countering-spell-damage",children:"Countering Spell Damage"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Spend ",(0,r.jsx)(n.strong,{children:"SD equal to spell level"})]}),"\n",(0,r.jsxs)(n.li,{children:["Roll a counter check against ",(0,r.jsx)(n.strong,{children:"opponent\u2019s successful check total"})]}),"\n",(0,r.jsx)(n.li,{children:"Success = damage is prevented"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"countering-status-effects",children:"Countering Status Effects"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Spend ",(0,r.jsx)(n.strong,{children:"SD equal to spell level"})]}),"\n",(0,r.jsx)(n.li,{children:"Roll a counter check against the caster's total"}),"\n",(0,r.jsx)(n.li,{children:"Success = status effect is canceled"}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["If SD spent exceeds your proficiency cap, it becomes a ",(0,r.jsx)(n.strong,{children:"strained check"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"critical-counters",children:"Critical Counters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"natural 20"})," on a counter check results in ",(0,r.jsx)(n.strong,{children:"critical mitigation"})]}),"\n",(0,r.jsxs)(n.li,{children:["Fully cancels ",(0,r.jsx)(n.strong,{children:"both effects and damage"})]}),"\n",(0,r.jsx)(n.li,{children:"Works for countering spell damage or effects"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"reactions",children:"Reactions"}),"\n",(0,r.jsx)(n.h3,{id:"counteraction",children:"Counteraction"}),"\n",(0,r.jsx)(n.p,{children:"Used against untargeted threats (traps, falling objects, magical bursts)."}),"\n",(0,r.jsx)(n.p,{children:"Spend one of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"20ft of movement"}),"\n",(0,r.jsx)(n.li,{children:"10ft movement + 1 SD"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Then roll a ",(0,r.jsx)(n.strong,{children:"stressed check"})," determined by GM"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"+1 DC per missing SD"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"counter-attack",children:"Counter Attack"}),"\n",(0,r.jsxs)(n.p,{children:["When a creature within 5ft ",(0,r.jsx)(n.strong,{children:"tries to leave"})," your melee range:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Make a ",(0,r.jsx)(n.strong,{children:"melee attack"})," as a reaction"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cost-choose-one",children:"Cost (choose one):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1 SD"}),"\n",(0,r.jsx)(n.li,{children:"10ft unspent movement"}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Counts toward proficiency cap",(0,r.jsx)(n.br,{}),"\n","Cannot counter attack the ",(0,r.jsx)(n.strong,{children:"same creature more than once per round"})," unless specified by an ability"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"dodge-passive-defense",children:"Dodge (Passive Defense)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Passive Dodge = Agility score"})}),"\n",(0,r.jsxs)(n.li,{children:["If proficient in Agility: add ",(0,r.jsx)(n.strong,{children:"proficiency bonus"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"targeting-dodge",children:"Targeting Dodge"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Any ",(0,r.jsx)(n.strong,{children:"physical or spell attack"})," requiring line of sight must beat Passive Dodge"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Passive Dodge = ",(0,r.jsx)(n.strong,{children:"DC"})," of the targeting check"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"ending-status-effects",children:"Ending Status Effects"}),"\n",(0,r.jsx)(n.p,{children:"To end an escapable effect (e.g., Grappled, Restrained, Charmed):"}),"\n",(0,r.jsx)(n.p,{children:"Spend one of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"2 SD"}),"\n",(0,r.jsx)(n.li,{children:"20ft movement"}),"\n",(0,r.jsx)(n.li,{children:"1 SD + 10ft movement"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Then:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Roll 1d20 + appropriate ability modifier (+ proficiency if applicable)"}),"\n",(0,r.jsx)(n.li,{children:"Beat the DC or contested roll of the source"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);